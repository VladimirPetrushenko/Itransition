@model ProjectForItransition.ViewModels.Collection.ShowCollectionViewModel

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Title"];

    var integers = Model.Collection.NameElements.Where(x => x.Type == TypeField.Integer).ToList();
    var dates = Model.Collection.NameElements.Where(x => x.Type == TypeField.DateTime).ToList();
    var strings = Model.Collection.NameElements.Where(x => x.Type == TypeField.String).ToList();
    var markdowns = Model.Collection.NameElements.Where(x => x.Type == TypeField.Markdown).ToList();
    var checkboxes = Model.Collection.NameElements.Where(x => x.Type == TypeField.Checkbox).ToList();
    var i = 0;
}

<div class="row">
    <div class="text-center col-12 row m-3">
        <h1 class="col-11 text-center">
            @Localizer["Collection"] - @Model.Collection.Name
        </h1>
    </div>
    <div class="col-12 row">
        <div class="col-8">
            <h5>@Localizer["Topic"] - @Model.Collection.Topic</h5>
            <div>
                <div>@Localizer["Description"] - </div>
                @if (Model.Collection.Description != null)
                {
                    @Html.Raw(Markdown.ToHtml(Model.Collection.Description))
                }
            </div>
        </div>
        <div class="col-4">
            @{
                var url = Cloudinary.Api.UrlImgUp.Format("png")
                                .Transform(new Transformation().Width(300).Height(200));
                @if (Model.Collection.Image != null)
                {
                    @Html.Raw(url.BuildImageTag(Model.Collection.Image.PublicId, new StringDictionary("alt=Image collection", "class= col-12")))
                }
            }
        </div>
    </div>
    <div class="col-12 row">
        <form method="post" class="col-12 row mt-3">
            <div id="filterTag" class="form-control col-12" name="TagsForFilter"></div>
            <div class="col-12 row mt-2 ml-0 p-0">
                <div class="form-inline col-8 p-0">
                    <input type="hidden" value="@Model.Collection.Id" name="CollectionId" />
                    <input id="filterName" name="NameForFilter" value="@Model.NameForFilter" placeholder="@Localizer["NameFilter"]" class="form-control col-9" />
                    <div class="col-3">
                        <input type="submit" value="@Localizer["Filter"]" class="btn btn-primary" />
                    </div>
                </div>
                <div class="col-4 text-right p-0">
                    <button class="btn btn-primary" asp-action="CreateItem" asp-controller="Item" formmethod="get">@Localizer["CreateItem"]</button>
                </div>
            </div>
            <input type="hidden" id="sortType" name="sort" />
            <input type="hidden" id="itemIdInput" name="itemId" />
            <table class="table table-bordered mt-3">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col" class="col-2">
                            <button class="btn btn-link" onclick="changeInput(sortType, '@ViewBag.NameSortParm')">@Localizer["ItemName"]</button>
                        </th>
                        <th scope="col">
                            <button class="btn btn-link" onclick="changeInput(sortType, '@ViewBag.TagSortParm')">@Localizer["Tags"]</button>
                        </th>
                        @if (integers.Count() > 0)
                        {
                            <th scope="col">
                                <button class="btn btn-link" onclick="changeInput(sortType, '@ViewBag.IntegerSortParm')">@Localizer["Integer"]</button>
                            </th>
                        }
                        @if (dates.Count() > 0)
                        {
                            <th scope="col">
                                <button class="btn btn-link" onclick="changeInput(sortType, '@ViewBag.DateSortParm')">@Localizer["Date"]</button>
                            </th>
                        }
                        @if (strings.Count() > 0)
                        {
                            <th scope="col">
                                <button class="btn btn-link" onclick="changeInput(sortType, '@ViewBag.StringSortParm')">@Localizer["String"]</button>
                            </th>
                        }
                        @if (markdowns.Count() > 0)
                        {
                            <th scope="col">
                                <button class="btn btn-link" onclick="changeInput(sortType, '@ViewBag.MarkdownSortParm')">@Localizer["Markdown"]</button>
                            </th>
                        }
                        @if (checkboxes.Count() > 0)
                        {
                            <th scope="col">
                                <button class="btn btn-link" onclick="changeInput(sortType, '@ViewBag.CheckboxSortParm')">@Localizer["Checkbox"]</button>
                            </th>
                        }
                        @if (User.IsInRole("admin") || Model.Collection.UserName == User.Identity.Name)
                        {
                            <th scope="col" class="col-1">
                                <div class="btn text-white">@Localizer["Possibilities"]</div>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Collection.Items)
                    {
                        <tr>
                            <th scope="row">
                                <button class="btn btn-link" onclick="changeInput(itemIdInput,@item.Id)" asp-action="Index" asp-controller="Item" formmethod="get">@item.Name</button>
                            </th>
                            <td>
                                @if (item.Tags != null)
                                {
                                    @foreach (var tag in item.Tags)
                                    {
                                        <span>@tag.Name </span>
                                    }
                                }
                            </td>
                            @if (integers.Count() > 0)
                            {
                                <td>
                                    @{i = 0;}
                                    @foreach (var name in integers)
                                    {
                                        <div>
                                            @name.Name -
                                            @if (item.IntegerElements.Count() > i)
                                            {
                                                <span> @item.IntegerElements[i].Value</span>
                                                i++;
                                            }
                                            else
                                            {
                                                <span> @Localizer["NotFound"]</span>
                                            }
                                        </div>
                                    }
                                </td>
                            }
                            @if (dates.Count() > 0)
                            {
                                <td>
                                    @{i = 0;}
                                    @foreach (var name in dates)
                                    {
                                        <div>
                                            @name.Name -
                                            @if (item.DateTimeElements.Count() > i)
                                            {
                                                <span> @item.DateTimeElements[i].Value</span>
                                                i++;
                                            }
                                            else
                                            {
                                                <span> @Localizer["NotFound"]</span>
                                            }
                                        </div>
                                    }
                                </td>
                            }
                            @if (strings.Count() > 0)
                            {
                                <td>
                                    @{i = 0;}
                                    @foreach (var name in strings)
                                    {
                                        <div>
                                            @name.Name -
                                            @if (item.StringElements.Count() > i)
                                            {
                                                <span> @item.StringElements[i].Value</span>
                                                i++;
                                            }
                                            else
                                            {
                                                <span> @Localizer["NotFound"]</span>
                                            }
                                        </div>
                                    }
                                </td>
                            }
                            @if (markdowns.Count() > 0)
                            {
                                <td>
                                    @{i = 0;}
                                    @foreach (var name in markdowns)
                                    {
                                        <div>
                                            @name.Name -
                                            @if (item.MarkdownElements.Count() > i)
                                            {
                                                <span> @item.MarkdownElements[i].Value</span>
                                                i++;
                                            }
                                            else
                                            {
                                                <span> @Localizer["NotFound"]</span>
                                            }
                                        </div>
                                    }
                                </td>
                            }
                            @if (checkboxes.Count() > 0)
                            {
                                <td>
                                    @{i = 0;}
                                    @foreach (var name in checkboxes)
                                    {
                                        <div>
                                            @name.Name -
                                            @if (item.CheckboxElements.Count() > i)
                                            {
                                                if (@item.CheckboxElements[i].Value)
                                                {
                                                    <input name="checkboxes" type="checkbox" checked disabled />
                                                }
                                                else
                                                {
                                                    <input name="checkboxes" type="checkbox" disabled />
                                                }
                                                i++;
                                            }
                                            else
                                            {
                                                <span> @Localizer["NotFound"]</span>
                                            }
                                        </div>
                                    }
                                </td>
                            }
                            @if (User.IsInRole("admin") || Model.Collection.UserName == User.Identity.Name)
                            {
                                <td>
                                    <button class="btn btn-primary btn-circle w-100 m-1" onclick="changeInput(itemIdInput,@item.Id)" asp-action="UpdateItem" asp-controller="Item" formmethod="get">
                                        <i class="far fa-edit"></i>
                                    </button>
                                    <button class="btn btn-danger btn-circle w-100 m-1" onclick="changeInput(itemIdInput,@item.Id)" asp-action="DeleteItem" asp-controller="Item" formmethod="get">
                                        <i class="fas fa-ban"></i> 
                                    </button>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </form>
    </div>
</div>

<script>
    function changeInput(element, str) {
        element.value = str;
    }

    var allTagsForShowCollection = new Array();
    @if (Model.AllTags != null)
    {
        foreach (var item in Model.AllTags)
        {
            @:allTagsForShowCollection.push('@item');
        }
    }

    var filterTags = new Array();
    @if (Model.FilterTags != null)
    {
        foreach (var item in Model.FilterTags)
        {
            @:filterTags.push('@item');
        }
    }

    $(function () {
        $('#filterTag').magicSuggest({
            data: allTagsForShowCollection,
            value: filterTags,
            placeholder: '@Localizer["TagFilter"]',
        });
    });
</script>