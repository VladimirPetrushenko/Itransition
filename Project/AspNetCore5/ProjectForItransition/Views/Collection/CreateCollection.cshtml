@model ProjectForItransition.ViewModels.Collection.CreateCollectionViewModel

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Title"];
    var userName = Model.UserName != null ? Model.UserName : User.Identity.Name;
}
<div class="row col-12">
    <form method="post" class="col-12" asp-action="CreateCollection" asp-controller="Collection" asp-antiforgery="true" enctype="multipart/form-data">
        <input type="hidden" asp-for="UserName" value="@userName" />
        @if(!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="text-danger">@Model.ErrorMessage</div>
        }
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row mt-4">
            <div class="col-md-9 mb-3">
                <div class="row">
                    <h1 class="text-center col-12 mb-4">@Localizer["CreateCollection"]</h1>
                    <div class="form-group col-12 row">
                        <label asp-for="Name" class="col-5 col-sm-4 col-form-label">@Localizer["NameCollection"]: </label>
                        <input type="text" asp-for="Name" class="form-control col-7 col-sm-8" autocomplete="off" />
                        <span class="col-5 col-sm-4"></span>
                        <span asp-validation-for="Name" class="text-danger col-7 col-sm-8"></span>
                    </div>
                    <br />
                </div>
                <div class="row">
                    <div class="form-group col-12 row">
                        <label class="col-form-label col-5 col-sm-4">@Localizer["Topic"]: </label>
                        <div class="col-7 col-sm-8 pl-0 pr-0">
                            <select asp-for="Topic" class="select custom-select">
                                @foreach (var item in Enum.GetValues(typeof(Topic)))
                                {
                                <option value="@item">@item</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div id="dropZone" onclick="fileUpload.click()" ondrop="dropHandler(event, fileUpload)" ondragover="dragOverHandler(event)" ondragleave="dragLeaveHandler(event)">
                    <div id="drop" class="text-center">
                        @Localizer["Drop"]
                    </div>
                </div>
                <input id="fileUpload" style="display:none;" onchange="handleFilesClick(event)" type="file" name="ImageInput" multiple accept="image/gif, image/jpeg, image/png" />
            </div>
        </div>
        <label>@Localizer["Description"]</label>
        <textarea asp-for="Description" class="form-control" rows="10"></textarea>
        <div id="NameElements"></div>
        <div id="SelectElements"></div>
        <br />
        <div class="row">
            <div class="col-md-4 mt-1">
                <input type="button" class="btn btn-primary col-12" onclick="appendElement(NameElements)" value="@Localizer["Element"]" />
            </div>
            <div class="col-md-4 mt-1">
                <input type="button" class="btn btn-primary col-12" onclick="appendSelect(SelectElements)" value="@Localizer["Select"]" />
            </div>
            <div class="col-md-4 mt-1">
                <input type="submit" class="btn btn-success col-12" value="@Localizer["Create"]" />
            </div>
        </div>
    </form>
</div>
<script>
    function appendSelect(element) {
        let div = document.createElement("div");
        div.classList.add('row');
        div.classList.add('mt-2');
        div.innerHTML = "<input type=\"hidden\" name=\"CountSelect\" value=\"1\" /> " +
            "<label class=\"col-6 col-md-3 mt-2\">@Localizer["FieldName"]: </label>" +
            "<input type=\"text\" name=\"SelectField\" class=\"form-control col-6 col-md-3\" autocomplete=\"off\"/> " +
            "<label class=\"col-6 col-md-3 mt-2\">@Localizer["SelectElement"]: </label>" +
            "<input type=\"text\" name=\"Options\" class=\"form-control col-5 col-md-2\" autocomplete=\"off\"/> " +
            "<div class=\"col-1 col-md-1 text-md-right\"><button class=\"btn pl-0 text-danger\" onclick='deleteElement(event)'>" +
            "X</button ></div><div class=\"col-12 p-0\"><div class=\"row\"><div class=\"row col-12 p-0\"><div class=\"col-6 col-md-9\"></div>" +
            "<div class=\"col-6 col-md-2 p-0 text-md-center\"><input type=\"button\" class=\"btn btn-info mt-1 col-4\" onclick='addInput(event)' value=\"+\" /></div></div></div></div>";
        element.appendChild(div);
    }

    function addInput(e) {
        let div = document.createElement("div");
        div.classList.add('row');
        div.classList.add('col-12');
        div.classList.add('p-0');
        div.innerHTML = "<div class=\"col-6 col-md-9\"></div><input type =\"text\" name=\"Options\" class=\"form-control col-5 mt-1 col-md-2\" autocomplete=\"off\"/>" +
            "<div class=\"col-1 col-md-1 text-center\"><button class=\"btn pl-0 text-danger\" onclick='deleteElement(event)'>x</button></div>";
        let parentDiv = (((e.target).parentElement).parentElement).parentElement;
        (parentDiv).insertBefore(div, (parentDiv).firstChild);
        let inputSelect = (((parentDiv).parentElement).parentElement).firstChild;
        inputSelect.value = parseInt(inputSelect.value) + 1;
    }

    function appendElement(element) {
        let div = document.createElement("div");
        div.classList.add('row');
        div.classList.add('mt-2');
        div.innerHTML += "<label class=\"col-6 col-md-3 mt-2\">@Localizer["FieldName"]: </label>" +
            "<input type=\"text\" name=\"NameFields\" class=\"form-control col-6 col-md-3\" autocomplete=\"off\"/> " +
            getInputFieldForNameElement();
        element.appendChild(div);
    }

    function getInputFieldForNameElement() {
        let option = "";
        @foreach (var item in Enum.GetValues(typeof(TypeField)))
        {
            @:option += "<option value = \"@item\" >@item</option>"
        }
        let html = "<label class=\"col-6 col-md-3 mt-2\">@Localizer["FieldType"]: </label>" +
            "<div class=\"col-5 col-md-2 pr-0\">" +
            "<select name =\"Types\" class=\"select custom-select\" style=\"margin-left: -15px\">" +
            option + "</select></div><div class=\"col-1 col-md-1 text-md-right\">" +
            "<button class=\"btn pl-0 text-danger\" onclick='deleteElement(event)'>X</button></div>";
        return html;
    }

    function deleteElement(e) {
        (((e.target).parentElement).parentElement).remove();
    }

    function handleFilesClick(e) {
        let files = e.target.files;
        for (let i = 0; i < files.length; i++) {
            let file = files[i]

            var img = document.createElement("img");
            img.classList.add("img-thumbnail");
            img.file = file;

            let div = document.createElement("div");
            div.innerHTML = "<div id = \"dropZone\" onclick = \"fileUpload.click()\" ondrop = \"dropHandler(event, fileUpload)\" ondragover = \"dragOverHandler(event)\" ondragleave = \"dragLeaveHandler(event)\" ></div >";

            div.firstChild.appendChild(img);

            let parent = e.target.parentElement;
            for (let i = 0; i < parent.children.length; i++) {
                if (parent.children[i].tagName === "DIV") {
                    parent.removeChild(parent.children[i]);
                }
            }
            parent.appendChild(div);

            let reader = new FileReader();
            reader.onload = (function (aImg) { return function (e) { aImg.src = e.target.result; }; })(img);
            reader.readAsDataURL(file);
        }
    }
</script>
